name: Deploy Laravel API to EC2

on:
  push:
    branches: [ test/ci-cd ]

jobs:
  tests:
    name: Run Tests
    
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: mentor_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, mysql, pcntl, pdo, sqlite, pdo_sqlite, bcmath, intl, gd, exif, iconv
        coverage: none

    - name: Copy environment file
      run: cp .env.ci .env
        
    - name: Install Dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Generate application key
      run: php artisan key:generate

    - name: Migrate and seed database
      run: php artisan migrate:fresh --seed --force
  
    - name: Run Tests
      run: php artisan test

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test/ci-cd' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, bcmath, zip
        coverage: none

    - name: Deploy Laravel API to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Navigate to application directory
          cd /var/www/html/mentor-backend
          
          # Pull latest changes
          git pull origin main
          
          # Install/update dependencies
          composer install --no-dev --optimize-autoloader --no-interaction
          
          # Run migrations
          php artisan migrate:fresh --seed --force
          
          # Clear and cache configurations
          php artisan optimize:clear
          
          # Set proper permissions
          sudo usermod -a -G ec2-user nginx
          # sudo chown -R nginx:nginx /var/www/html/mentor-backend
          sudo chmod -R 755 /var/www/html/mentor-backend
          sudo chmod -R 775 /var/www/html/mentor-backend/storage
          sudo chmod -R 775 /var/www/html/mentor-backend/bootstrap/cache

          # Restart PHP-FPM
          sudo systemctl restart php8.2-fpm
          sudo systemctl restart nginx
